openapi: 3.0.0
info:
  title: Learning Management System (LMS)
  description: REST v1 API Documentation
  version: 1.0.0
servers:
  - url: "{protocol}://lms-server-delta.vercel.app/"
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
    description: API Base URL.
components:
  responses:
    CommonErrorResponses:
      "400":
        description: Bad request.
      "403":
        description: Unauthorized.
      "401":
        description: Unauthenticated.
      "500":
        description: Unexpected error.
  schemas:
    UserRoleModel:
      type: string
      enum: ["STUDENT", "INSTRUCTOR", "OWNER"]
    CourseEnrollmentRoleModel:
      type: string
      enum: ["STUDENT", "INSTRUCTOR"]
    CourseStatusModel:
      type: string
      enum: ["PUBLISHED", "DRAFT"]
    UserModel:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: array
          items:
            type: string
        phoneNumber:
          type: string
        name:
          type: string
        NIM:
          type: string
        avatar:
          type: string
        about:
          type: string
        totalCourses:
          type: integer
        totalLessons:
          type: integer
        totalUnreadMessages:
          type: integer
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        role:
          $ref: "#/components/schemas/UserRoleModel"
    CourseEnrollmentModel:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        courseId:
          type: integer
        role:
          $ref: "#/components/schemas/CourseEnrollmentRoleModel"
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
    CategoryModel:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
    CourseModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true # todo
        status:
          $ref: "#/components/schemas/CourseStatusModel"
        image:
          type: string
        title:
          type: string
        description:
          type: string
        material:
          type: string
        totalStudents:
          type: integer
          readOnly: true
        totalInstructors:
          type: integer
          readOnly: true
        totalLessons:
          type: integer
          readOnly: true
        totalVideos:
          type: integer
          readOnly: true
        totalDurations:
          type: number
          format: float
          readOnly: true
        totalLikes:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date
          readOnly: true
        updatedAt:
          type: string
          format: date
          readOnly: true
        authorId:
          type: integer
        categoryId:
          type: integer
    CourseLessonModel:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        totalVideos:
          type: integer
        totalDurations:
          type: number
          format: float
        totalMaterials:
          type: integer
        createdAt:
          type: string
          format: date
          readOnly: true
        updatedAt:
          type: string
          format: date
          readOnly: true
        courseId:
          type: integer
    CourseLessonVideoModel:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        totalDurations:
          type: number
          format: float
        youtubeLink:
          type: string
        createdAt:
          type: string
          format: date
          readOnly: true
        updatedAt:
          type: string
          format: date
          readOnly: true
        lessonId:
          type: integer
    CourseLikeModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        courseId:
          type: integer
        userId:
          type: integer
          readOnly: true

    #
    # > UserType <
    #
    CreateUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        NIM:
          type: string
        phoneNumber:
          type: string
        avatar:
          type: string
        about:
          type: string
      required:
        - email
        - password
        - name
        - NIM
    SignInDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    #
    # > Course Type <
    #
    CreateCourseDto:
      type: object
      properties:
        title:
          type: string
        categoryId:
          type: integer
        image:
          type: string
        description:
          type: string
        material:
          type: string
      required:
        - title
        - categoryId
    UpdateBasicCourseDto:
      type: object
      properties:
        title:
          type: string
        categoryId:
          type: integer
        image:
          type: string
        description:
          type: string
        material:
          type: string
    CreateCourseLikeDto:
      type: object
      properties:
    GetEnrolledCoursesData:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CourseModel"
          - type: object
            properties:
              category:
                $ref: "#/components/schemas/CategoryModel"
              author:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/UserModel/properties/id"
                  avatar:
                    $ref: "#/components/schemas/UserModel/properties/avatar"
                  name:
                    $ref: "#/components/schemas/UserModel/properties/name"
                  NIM:
                    $ref: "#/components/schemas/UserModel/properties/NIM"

    #
    # > CourseEnrollment Type <
    #
    CreateCourseEnrollmentDto:
      type: object
      properties:
        userId:
          type: integer
        role:
          $ref: "#/components/schemas/CourseEnrollmentRoleModel"
      required:
        - userId
        - role
    UpdateCourseEnrollmentRoleDto:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/CourseEnrollmentRoleModel"
      required:
        - role

    #
    # > CourseLesson Type <
    #
    CreateCourseLessonDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: integer
      required:
        - title
    UpdateCourseLessonDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: integer

    #
    # > CourseLessonVideo Type <
    #
    CreateCourseLessonVideoDto:
      type: object
      properties:
        name:
          type: string
        youtubeLink:
          type: string
        totalDurations:
          type: number
          format: float
        description:
          type: string
      required:
        - name
        - youtubeLink
        - totalDurations
    UpdateCourseLessonVideoSourceDto:
      type: object
      properties:
        name:
          type: string
        youtubeLink:
          type: string
        totalDurations:
          type: number
          format: float
        description:
          type: string
      required:
        - youtubeLink
        - totalDurations

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
paths:
  #
  # > User APIs <
  #
  /users:
    post:
      tags:
        - User
      summary: Create a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/UserModel"
          - $ref: "#/components/responses/CommonErrorResponses"
  /users/signin:
    post:
      tags:
        - User
      summary: SignIn a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInDto"
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        type: object
          - $ref: "#/components/responses/CommonErrorResponses"
  /users/signout:
    post:
      tags:
        - User
      summary: SignOut a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        type: object
          - $ref: "#/components/responses/CommonErrorResponses"

  #
  # > Course APIs <
  #
  /courses:
    post:
      tags:
        - Course
      summary: Create a course.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"
    get:
      tags:
        - Course
      summary: Get courses.
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/enrolled:
    get:
      tags:
        - Course
      summary: Get enrolled courses.
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      dafta:
                        type: array
                        items:
                          $ref: "#/components/schemas/GetEnrolledCoursesData"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}:
    get:
      tags:
        - Course
      summary: Get a course by courseId.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"

    put:
      tags:
        - Course
      summary: Update a course.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBasicCourseDto"
      responses:
        allOf:
          - "200":
              description: Resource updated.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"

    delete:
      tags:
        - Course
      summary: Delete a course.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: Resource deleted.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/likes:
    post:
      tags:
        - CourseLike
      summary: Create a course like.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseLikeDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLikeModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/likes/{likeId}:
    delete:
      tags:
        - CourseLike
      summary: Delete a course like.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: likeId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: Resource deleted.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
          - $ref: "#/components/responses/CommonErrorResponses"

  #
  # > CourseEnrollment APIs <
  #
  /courses/{courseId}/enrollments:
    post:
      tags:
        - CourseEnrollment
      summary: Create an enrollment.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseEnrollmentDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseEnrollmentModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/enrollments/{enrollmentId}/role:
    patch:
      tags:
        - CourseEnrollment
      summary: Update an enrollment role.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: enrollmentId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCourseEnrollmentRoleDto"
      responses:
        allOf:
          - "200":
              description: Resource updated.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseEnrollmentModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/enrollments/{enrollmentId}:
    delete:
      tags:
        - CourseEnrollment
      summary: Delete an enrollment.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: enrollmentId
          in: path
          required: true
          schema:
          type: number
      responses:
        allOf:
          - "200":
              description: Resource deleted.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
          - $ref: "#/components/responses/CommonErrorResponses"

  #
  # > CourseLesson APIs <
  #
  /courses/{courseId}/lessons:
    post:
      tags:
        - CourseLesson
      summary: Create a lesson.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseLessonDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLessonModel"
          - $ref: "#/components/responses/CommonErrorResponses"
    get:
      tags:
        - CourseLesson
      summary: Get lessons.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CourseLessonModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/lessons/{lessonId}:
    get:
      tags:
        - CourseLesson
      summary: Get a lesson by lessonId.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: lessonId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLessonModel"
          - $ref: "#/components/responses/CommonErrorResponses"

    put:
      tags:
        - CourseLesson
      summary: Update a lesson.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: lessonId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCourseLessonDto"
      responses:
        allOf:
          - "200":
              description: Resource updated.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLessonModel"
          - $ref: "#/components/responses/CommonErrorResponses"

    delete:
      tags:
        - CourseLesson
      summary: Delete a lesson.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: lessonId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: Resource deleted.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
          - $ref: "#/components/responses/CommonErrorResponses"

  #
  # > CourseLessonVideo APIs <
  #
  /courses/{courseId}/lessons/{lessonId}/videos:
    post:
      tags:
        - CourseLessonVideo
      summary: Create a video.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: lessonId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseLessonVideoDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLessonVideoModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/lessons/{lessonId}/videos/{videoId}:
    get:
      tags:
        - CourseLessonVideo
      summary: Get a video by videoId.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: lessonId
          in: path
          required: true
          schema:
            type: number
        - name: videoId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLessonVideoModel"
          - $ref: "#/components/responses/CommonErrorResponses"

    delete:
      tags:
        - CourseLessonVideo
      summary: Delete a video.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: lessonId
          in: path
          required: true
          schema:
            type: number
        - name: videoId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: Resource deleted.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/lessons/{lessonId}/videos/{videoId}/source:
    patch:
      tags:
        - CourseLessonVideo
      summary: Update a video source.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: lessonId
          in: path
          required: true
          schema:
            type: number
        - name: videoId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCourseLessonVideoSourceDto"
      responses:
        allOf:
          - "200":
              description: Resource updated.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLessonVideoModel"
          - $ref: "#/components/responses/CommonErrorResponses"


