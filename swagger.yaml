openapi: 3.0.0
info:
  title: Learning Management System (LMS)
  description: REST v1 API Documentation
  version: 1.0.0
servers:
  - url: "{protocol}://lms-server-delta.vercel.app/"
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
    description: API Base URL.
components:
  responses:
    CommonErrorResponses:
      "400":
        description: Bad request.
      "403":
        description: Unauthorized.
      "401":
        description: Unauthenticated.
      "500":
        description: Unexpected error.
  schemas:
    UserRoleModel:
      type: string
      enum: ["STUDENT", "INSTRUCTOR", "OWNER"]
    CourseEnrollmentRoleModel:
      type: string
      enum: ["STUDENT", "INSTRUCTOR"]
    CourseStatusModel:
      type: string
      enum: ["PUBLISHED", "DRAFT"]
    UserModel:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: array
          items:
            type: string
        phoneNumber:
          type: string
        name:
          type: string
        NIM:
          type: string
        avatar:
          type: string
        about:
          type: string
        totalCourses:
          type: integer
        totalLessons:
          type: integer
        totalUnreadMessages:
          type: integer
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        role:
          $ref: "#/components/schemas/UserRoleModel"
    CourseEnrollmentModel:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        courseId:
          type: integer
        role:
          $ref: "#/components/schemas/CourseEnrollmentRoleModel"
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
    CategoryModel:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
    CourseModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true # todo
        status:
          $ref: "#/components/schemas/CourseStatusModel"
        image:
          type: string
        title:
          type: string
        description:
          type: string
        material:
          type: string
        totalStudents:
          type: integer
          readOnly: true
        totalInstructors:
          type: integer
          readOnly: true
        totalLessons:
          type: integer
          readOnly: true
        totalVideos:
          type: integer
          readOnly: true
        totalDurations:
          type: number
          format: float
          readOnly: true
        totalLikes:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date
          readOnly: true
        updatedAt:
          type: string
          format: date
          readOnly: true
        authorId:
          type: integer
        categoryId:
          type: integer
    CourseLessonModel:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        totalVideos:
          type: integer
        totalDurations:
          type: number
          format: float
        totalMaterials:
          type: integer
        createdAt:
          type: string
          format: date
          readOnly: true
        updatedAt:
          type: string
          format: date
          readOnly: true
        courseId:
          type: integer
    CourseLikeModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        courseId:
          type: integer
        userId:
          type: integer
          readOnly: true
    CreateCourseDto:
      type: object
      properties:
        title:
          type: string
        categoryId:
          type: integer
        image:
          type: string
        description:
          type: string
        material:
          type: string
      required:
        - title
        - categoryId
    UpdateBasicCourseDto:
      type: object
      properties:
        title:
          type: string
        categoryId:
          type: integer
        image:
          type: string
        description:
          type: string
        material:
          type: string
    CreateCourseLikeDto:
      type: object
      properties:
    GetEnrolledCoursesData:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CourseModel"
          - type: object
            properties:
              category:
                $ref: "#/components/schemas/CategoryModel"
              author:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/UserModel/properties/id"
                  avatar:
                    $ref: "#/components/schemas/UserModel/properties/avatar"
                  name:
                    $ref: "#/components/schemas/UserModel/properties/name"
                  NIM:
                    $ref: "#/components/schemas/UserModel/properties/NIM"
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
paths:
  /courses:
    post:
      tags:
        - Course
      summary: Create a course.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"
    get:
      tags:
        - Course
      summary: Get courses.
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/enrolled:
    get:
      tags:
        - Course
      summary: Get enrolled courses.
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/GetEnrolledCoursesData"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}:
    get:
      tags:
        - Course
      summary: Get a course.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: OK.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"

    put:
      tags:
        - Course
      summary: Update a course.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBasicCourseDto"
      responses:
        allOf:
          - "200":
              description: Resource updated.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseModel"
          - $ref: "#/components/responses/CommonErrorResponses"

    delete:
      tags:
        - Course
      summary: Delete a course.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: Resource deleted.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/likes:
    post:
      tags:
        - CourseLike
      summary: Create a course like.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCourseLikeDto"
      responses:
        allOf:
          - "201":
              description: Resource created.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/CourseLikeModel"
          - $ref: "#/components/responses/CommonErrorResponses"

  /courses/{courseId}/likes/{likeId}:
    delete:
      tags:
        - CourseLike
      summary: Delete a course like.
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: number
        - name: likeId
          in: path
          required: true
          schema:
            type: number
      responses:
        allOf:
          - "200":
              description: Resource deleted.
              content:
                application/json:
                  schema:
                    type: object
                    properties:
          - $ref: "#/components/responses/CommonErrorResponses"



#  /courses/categories:
#    get:
#      tags:
#        - Categories
#      summary: Returns all course categories.
#      responses:
#        allOf:
#          - "200":
#              description: OK.
#              content:
#                application/json:
#                  schema:
#                    allOf:
#                      - type: object
#                        properties:
#                          data:
#                            type: array
#                            items:
#                              allOf:
#                                - $ref: "#/components/schemas/CategoryModel"
#                                - required:
#                                    - id
#                                    - title
#                                    - createdAt
#                                    - updatedAt
#          - $ref: "#/components/responses/CommonErrorResponses"

